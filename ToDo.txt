ToDo:

- Web page:
	* Text explorer:
		OPTIONS: AREA, D3js-like, Handmade timeline, Raphaeljs
		
	* Crossreader:
                Events:
                        DONE 1-Vertical: Load one text as an array. 
                        DONE 2-Vertical: Then put the paragraph in "mycentercolumn"
                        DONE 3-Vertical: load metadata in "mytopmetadata"
                        
                        DONE 4-Horizontal: Set variables for left and right paragraphs
                        [SURE?] 5-Horizontal: load metadata for left & right paragraphs
		
                Features:
                        - Multilanguage of fix text (cataln and spanish?) 
                                -> Define language files
                                -> Write the translation function: _t("string")
                                
                        DONE - Fake-Session-tack to avoid same paragraph reading -> using  simple window.name to store the list of browsed paragraphs
                        - Images on left column. NOTE: images belongs to a text. Thi is, all the paragraphs in this text includes same images
                                DONE-> include images name in metadata.js, 
                                -> and set a fix path to store the image files.
                                -> add the code to check and load images in case there are some for the text been read. 
                        - Footnotes in the right column. Add footnotes in the tid.json file.
                        - Themes (only-css-based or a complete theme):
                                -> Define theme structure. Initially [v1] themes are just 2 colors definition in css/theme.css file
                                -> Code the theme selection and loading.
                                -> Include several themmes: b&w, w&b, macbatheme or EG theme (ask EB for his prefered colors for a text + background.
                                -> [optional] code a theme editor with 2 color picker.

- Data
	* FORMATS:
		DONE- Define 1 text file json format
		DONE- Define all-texts metadata format
		- Define similarities chain json format
		
	* Sonia:
		- Metadata/Text (Spreadsheed)
		- Each Text
			> Paragraph curated separation

	* Data conversion
		- Metadata to JSON
		- Texts to TXT
		- TXT to JSON

	* Gabriela/Jaume: 
		> paragraph similarity:
			* write definition
			* code scripts
			* run data analysis
		> output of a paragraph's cue of similarity

	* WordStorm images for each text, or for each paragraph: https://github.com/quimcastella/WordStorm

	OTHER PAGES:
		- Credits
		- Explanation data and process
		- Feedback form
		
		-> include links in navigation
		-> on click load + html architecture
		-> write contents

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Other uses found of "crossreads", "cross reads" or similiar variants:

* Deusche wikipedia: http://de.wikipedia.org/wiki/Cross-Reading


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Materials:

- Imaga arrows based on the public domain images by Dr Brains published in wikicommons: http://commons.wikimedia.org/wiki/File:Red_left_arrow.png
