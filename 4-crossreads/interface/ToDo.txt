
ToDo:

1) JS:

DONE  - Add the same fake-grid image functionality in oages.html to index.html

- Reader
DONE  * Reader separated in partials/reader.html
      Add page metadata:  
DONE  * page index/total
DONE  * diary metadata (title, author, date)
DONE  * page chart 

DONE  * CHECK page images: check empty diaries. Try downloading lacking images.

HALF done???      * Add mouse-over div-border to page-square

      Functionality for the rest of buttons
DONE  * Add button to close the reader

NO      * same topic 
NO      * same topic group
NO      * same author
NO      * similar date
NO      * just random page
-----> the buttons go to header menu. As in vIII: click topic groups and topics 
       => generate diaty-grid images for: 
DONE          5 GT 
          + 30 topics = 35 ==> WORKING in 4-crossreads/data/13-ImageMagik-command-for-fake-grid.py
          35 x 3 widths = 105 -> Create three fake-grid images sizes, for fake-responsivity
             => Add JS check screen size of user device -> index and pages in line: <img ng-src="
                ./data/img/topicGroup-0.02-all/{{d.nid}}.gif"
          105 x 3 thersholds = 315
          x 5.4M
DONE   => read URL path and load respective image 


NO      Random subsets: 
NO      ----> Design and effect  (spinning rullette idea) when jumping to a page: 
NO          IDEA, simply move the div-border div from the page we are to the page we go, quite slowly & smoothly. Give a colid color to the backgroung div-border.

    * OPTION Context with same date-newspaper articles from Trove! (check notes on data=[rpcess.txt file
    * CSS-animate popup/hide reader in index and pages -> check angular-animate

???CHECK THIS- Clean scores (=0) for empty or almost empty (no characters < XXX) pages

DONE- When click the page-image thumb, call lightbox-like 

DONE- Clean 3-Transciption pages that have. e.g. "a6602036.html" in the top.

DONE- Timeline view -> add it to the dropdown. Probably needs a timeline.html file

- [OPTIONAL] Store configuration in HTML5 permanent store
  * needs a form with config values. Submit stores/updates the config settings in HTML5 store. 
  * Save visited pages w/ HTML5 storage (as in crossreads III)

NO- subsets/ for top pages by topic/topicGroup ...
  > May be it needs a top.html

------------------
2) HTML & CSS:
  
- STYLES
  * fonts
  * CSS
  * colors


- Header: with partials: 
  * Links
  * title(diggersdiaries)
  * feedback
  * Legend/sublegend for topics -> as buttons like in vIII? Then what happens onclick?? 
  ** MENU: the five TG
  ** Above the MENU: TagCloud (font sixe proportional to topic score [terms.json]) with topics with TG color


- Welcome page:

- Reader:
  * full screen
  With buttons to move
  * previous, Next
  * Close, exit full screen
  * Color-circles to jump to a topic group page

  

#########################################################
BONE 2015-10-21

js/Controller.js
DONE  - Get pageID from diaryID and page-number

index.html & pages.html  
DONE  - When click page in Image. Go to

reader.html
DONE  - Wouldn't be better if reader is not a new page? SO when open and close the reader the user stays where she was.
  - Functionality for the buttons
DONE    * Back/Forward: get next page and the page before

